{
  "name": "ng2-swapi",
  "tagline": "Angular2 service for Star Wars API",
  "body": "# Angular2 Service for Star Wars API\r\n# ATTENTION! Service & Documentation still in progress\r\n\r\nIt uses [Star Wars API](https://swapi.co/) by Paul Hallet\r\n\r\n## Installation\r\nRun `npm install ng2-swapi --save` to install and add to your dependencies\r\n\r\n### Installation optional\r\nDepending on your actual settings you may need to:\r\n- Add `ng2-swapi` path in your `map` object in `system.config.js`\r\n ```\r\n var map = {\r\n   'app':         'app',\r\n   ...\r\n   'ng2-swapi':   'node_modules/ng2-swapi'\r\n };\r\n ```\r\n- Add `ng2-swapi` package in your `packages` object in `system.config.js`\r\n  ```\r\n  var packages = {\r\n    'app':       { main: 'main.js',  defaultExtension: 'js' },\r\n    ...\r\n    'ng2-swapi': { main: 'index.js', defaultExtension: 'js' }\r\n  };\r\n  ```\r\n\r\n## Using\r\n1.  Import SwapiService Component\r\n```\r\n    import { SwapiService } from './ng2-swapi';\r\n```\r\n2. Add it in the provider array of your component\r\n```\r\n    @Component({\r\n        selector: 'my-custom-selector',\r\n        templateUrl: 'my-componet-template.component.html',\r\n        providers: [ SwapiService ]\r\n    })\r\n```\r\n3. Add an argument of type `SwapiService` to your class  constructor\r\n```\r\nexport class myComponent {\r\n      constructor (private swapi: SwapiService) {}\r\n    }\r\n```\r\n4. Call the desired method [(other available methods)](#methods-available)\r\n```\r\n// Example of using\r\n// Correspond to http://swapi.co/api/people/3/\r\n\r\n    this.swapi.getPerson(3).subscribe(res =>  {},err =>  {});\r\n```\r\n```\r\n//Response\r\nres = {\r\n\t\"name\": \"R2-D2\",\r\n\t\"height\": \"96\",\r\n\t\"mass\": \"32\",\r\n\t\"hair_color\": \"n/a\",\r\n\t\"skin_color\": \"white, blue\",\r\n\t\"eye_color\": \"red\",\r\n\t\"birth_year\": \"33BBY\",\r\n  ...\r\n```\r\n\r\n## Methods available\r\n### Get Root\r\n```\r\nswapi.getRoot(wookiee).subscribe(res =>  {},err =>  {});\r\n```\r\nAttributes:\r\n- `wookiee` boolean (default: false) - wookiee translations\r\n\r\nReturns\r\n- `res` object - contain the response of the call\r\n- `err` string - contain the error if something wrong occurred\r\n\r\n### Get People / Get Films / Get Starships / Get Vehicles / Get Species / Get Planets\r\n```\r\nswapi.getPeople(page, wookiee).subscribe(res =>  {},err =>  {});\r\n\r\nswapi.getFilms(page, wookiee).subscribe(res =>  {},err =>  {});\r\n\r\nswapi.getStarships(page, wookiee).subscribe(res =>  {},err =>  {});\r\n\r\nswapi.getVehicles(page, wookiee).subscribe(res =>  {},err =>  {});\r\n\r\nswapi.getSpecies(page, wookiee).subscribe(res =>  {},err =>  {});\r\n\r\nswapi.getPlanets(page, wookiee).subscribe(res =>  {},err =>  {});\r\n\r\n```\r\nAttributes:\r\n- `page` number (default: null) - page number\r\n- `wookiee` boolean (default: false) - wookiee translations\r\n\r\nReturns\r\n- `res` object - contain the response of the call\r\n- `err` string - contain the error if something wrong occurred\r\n\r\n### Get Person / Get Film / Get Starship / Get Vehicle / Get Specie / Get Planet\r\n```\r\nswapi.getPeople(id, wookiee).subscribe(res =>  {},err =>  {});\r\n\r\nswapi.getFilms(id, wookiee).subscribe(res =>  {},err =>  {});\r\n\r\nswapi.getStarships(id, wookiee).subscribe(res =>  {},err =>  {});\r\n\r\nswapi.getVehicles(id, wookiee).subscribe(res =>  {},err =>  {});\r\n\r\nswapi.getSpecies(id, wookiee).subscribe(res =>  {},err =>  {});\r\n\r\nswapi.getPlanets(id, wookiee).subscribe(res =>  {},err =>  {});\r\n\r\n```\r\nAttributes:\r\n- `id` number (mandatory) - `:id` of the resource\r\n- `wookiee` boolean (default: false) - wookiee translations\r\n\r\nReturns\r\n- `res` object - contain the response of the call\r\n- `err` string - contain the error if something wrong occurred\r\n\r\n### Original documentation\r\nOriginal documentation at [https://swapi.co/documentation](https://swapi.co/documentation).\r\n\r\nAngularJS version [here](https://github.com/unshift-devs/xyz-angular-swapi) by [unshift-devs](https://github.com/unshift-devs)\r\n\r\n## Designer\r\n[Gianmaria Leoni](https://github.com/giammaleoni)\r\n\r\n# ToDo\r\n  - Testing\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}